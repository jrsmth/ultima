@import "base";

/** Header */
header {
  display: flex;
  padding: 1rem;
  gap: 3rem;
  align-items: center;
  position: absolute;
  z-index: 100;
  background: $bastille;
  background: linear-gradient(90deg, $bastille 0%, $bastille00 100%);
  width: 50%;

  i {
    margin-right: .5rem;
  }

  #badge {
    height: 1.5rem;
    margin: .5rem;
  }

  #copy-game-id {
    cursor: pointer;
    opacity: .8;
    transition: 500ms;
    display: flex;
    font-size: 14px;
    margin-top: -3px;

    .fa-check {
      display: none;
    }

    .ticked {
      display: block;
      animation-name: fade-in-out;
      animation-duration: 1500ms;
      color: $turquoise; // FixMe
    }

    .fade-in {
      display: block;
      animation-name: fade-in;
      animation-duration: 500ms;
    }
  }

  .player {
    letter-spacing: .5px;
    font-size: 15px;
    opacity: .8;

    .symbol {
      color: $studio;
      margin-left: .5rem;
      transform: translateY(1px);
      filter: brightness(150%);

      &.cross {
        transform: scale(1.1);
      }
    }

    &.active {
      opacity: 1;

      &.this-user > .symbol {
        color: $turquoise;
      }
    }
  }
}

/** Tooltip */
.tooltip {
  .tooltip-text {
    display: flex;
    visibility: hidden;
    position: absolute;
    letter-spacing: 1.5px;
    width: 20rem;
    padding: 0 1rem;
    font-size: .75rem;
  }

  &:hover .tooltip-text {
    visibility: visible;
  }
} // TODO

/** Main Content */
#content {
  display: flex;
  height: 100%;
  width: 100%;
  position: absolute;
  z-index: 10;

  .main-bar {
    position: absolute;
    text-align: center;
    @include card;
    padding: 2rem;
    top: calc(50% - (.45 * $game-card-height-min));
    left: calc(50% - (.5 * $game-card-width-min));

    @media (min-width: 1500px) {
      top: calc(50% - (.45 * $game-card-height-max));
      left: calc(50% - (.5 * $game-card-width-max));
    }

    #player-turn {
      height: 5rem;
      color: $studio;
      &.hide { display: none; }

      div {
        display: none;
        &.active { display: block }
        &.this-user { color: $turquoise; }

        .symbol {
          font-size: 5rem;

          &.shadow {
            position: absolute;
            opacity: .5;
            filter: blur(.5rem);
          }
        }
      }

      #cross  { .shadow { transform: translateX(-3.75rem); } }
      #circle { .shadow { transform: translateX(-5rem);    } }
    }
  }
}

/** Boards **/
.board {
  &.active { display: grid; }
  grid-template-columns: 33.3% 33.3% 33.3%;
  display: none;
  margin: 2rem auto 0 auto;
  aspect-ratio: 1 / 1;
  height: $board-length-min;

  @media (min-width: 1500px) {
    height: $board-length-max;
  }
}

/** Three Board */
#three-board {
  .shadow {
    margin: .5rem;
    border: 1px solid $studio50;
    background-color: $revolver;
    border-radius: .25rem;

    .square {
      border-radius: inherit;
      transform: translate(-.25rem, -.25rem);
      border: 1px solid $studio50;
      background-color: $revolver;
      transition: .5s;
      align-content: center;
      justify-content: center;
      display: flex;
      flex-wrap: wrap;
      height: 100%;
      width: 100%;

      &:hover:not(.inactive) {
        opacity: 1;
        border: 1px solid $turquoise;
        cursor: pointer;
      }

      .symbol {
        font-size: 4rem;
        position: absolute;
        margin-top: calc(47.5% - 2rem);
      }
    }

    &:has(.this-user) {
      border: 1px solid $turquoise !important;

      .square {
        background: $turquoise;
        background: linear-gradient(45deg, $java 0%, $turquoise 15%, $spray 80%);
        border: 1px solid $turquoise !important;
        cursor: default !important ;

        .symbol {
          color: $revolver;
        }
      }
    }

    &:has(.opponent) {
      border: 1px solid $studio !important;

      .square {
        background: $studio;
        background: linear-gradient(45deg, $victoria 0%, $studio 15%, $abbey 80%);
        border: 1px solid $studio !important;
        cursor: default !important;

        .symbol {
          color: $revolver;
        }
      }
    }
  }
}

/** Nine Board */
#nine-board {
  .shadow.outer {
    margin: .5rem;

    &.draw {
      opacity: .5;
    }

    &.this-user, &.opponent {
      .inner {
        opacity: 1 !important;
        color: $revolver;
        .square {
          cursor: default !important;
        }
      }
    }

    &.this-user {
      .inner {
        border: 1px solid $turquoise !important;
        .square {
          background: $turquoise;
          background: linear-gradient(45deg, $java 0%, $turquoise 15%, $spray 80%);
          border: 1px solid $turquoise !important;
        }
      }
    }

    &.opponent {
      .inner {
        border: 1px solid $studio !important;
        .square {
          background: $studio;
          background: linear-gradient(45deg, $victoria 0%, $studio 15%, $abbey 80%);
          border: 1px solid $studio !important;
        }
      }
    }

    &:not(.playable, .this-user, .opponent-user) {
      .inner:not(.playable, .this-user, .opponent-user) {
        cursor: default !important;
        opacity: .5;

        .square {
          cursor: default !important;
          border: 1px solid $studio25 !important;
        }
      }

      .inner .this-user.square {
        border: 1px solid $turquoise !important;
      }
    }

    .square {
      display: grid;
      grid-template-columns: 33.3% 33.33% 33.3%;
      height: 100%;
    }
  }

  .shadow.inner {
    border: .75px solid $studio50;
    background-color: $revolver;
    border-radius: .25rem;
    margin: .25rem;

    @media (min-width: 1500px) {
      margin: .375rem;
      border: 1px solid $studio50;
    }

    .square { // FixMe :: duplication w/ threeboard
      border-radius: inherit;
      transform: translate(-.25rem, -.25rem);
      border: 1px solid $studio75;
      background-color: $revolver;
      transition: .5s;
      align-content: center;
      justify-content: center;
      display: flex;
      flex-wrap: wrap;
      height: 100%;
      width: 100%;

      &:hover:not(.inactive) {
        opacity: 1;
        border: 1px solid $turquoise;
        cursor: pointer;
      }

      .symbol {
        position: absolute;
        font-size: 1rem;
        margin-top: calc(50% - .45rem);

        @media (min-width: 1500px) {
          font-size: 1.5rem;
          margin-top: calc(50% - .75rem);
        }
      }
    }

    &:has(.this-user) {
      border: 1px solid $turquoise !important;
      opacity: 1 !important;

      .square {
        background: $turquoise !important;;
        background: linear-gradient(45deg, $java 0%, $turquoise 15%, $spray 80%) !important;;
        border: 1px solid $turquoise !important;
        cursor: default !important;

        .symbol {
          color: $revolver;
        }
      }
    }

    &:has(.opponent) {
      border: 1px solid $studio !important;
      opacity: 1 !important;

      .square {
        background: $studio !important;
        background: linear-gradient(45deg, $victoria 0%, $studio 15%, $abbey 80%) !important;
        border: 1px solid $studio !important;
        cursor: default !important;

        .symbol {
          color: $revolver;
        }
      }
    }

    &:has(.draw) { // Remove?
      opacity: .1;
    }
  }
}

/** Notification */
#notification {
  margin: 0 auto;
  height: 5rem;
  letter-spacing: .5px;
  align-items: center;
  text-align: left;
  display: none;
  width: $board-length-min;

  @media (min-width: 1500px) {
    width: $board-length-max;
  }

  &.active {
    display: flex;
  }

  &.error {
    margin: 2rem 1rem 0 1rem;
    width: 14rem;

    #notification-content {
      margin: 1rem;
    }
  }

  i {
    font-size: 2.25rem;
    margin: 0 1rem 0 1rem;
    transform: scale(-1, 1);

    background: -webkit-linear-gradient($java, $studio);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    transition: .2s;

    &#restart:hover {
      transform: scale(-1.05, 1.05);
    }
  }

  h3 {
    margin: 0 0 .25rem 0;
    font-weight: 300;
    font-size: 1.1rem;
  }

  p {
    margin: 0;
    font-size: .7rem;
    font-weight: 200;
    opacity: .9;
  }

  &.happy { }
  &.sad { }

  #restart {
    cursor: pointer;
  }

  i.hide {
    display: none;
  }
}

/** Loaders */
#game-loader {
  display: none;
  border: .5rem solid $studio50;
  border-top: .5rem solid $studio;
  border-radius: 50%;
  animation: spin 2s linear infinite;
  opacity: .5;
  width: 4rem;
  height: 4rem;
  top: 40%;
  left: calc(50% - 2rem);
  position: absolute;
}